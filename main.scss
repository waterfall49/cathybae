/* 3. Add Sass variables for any fonts and colours in the CSS file and replace them */
@import 'color';
@import 'font';

/* 5.	Use a mixin to add a drop-shadow  */
@mixin box-shadows($shadows...) {
  -moz-box-shadow: $shadows;
  -webkit-box-shadow: $shadows;
  box-shadow: $shadows;
}

/* 6.	Add a mixin that will take a parameter and conditionally change the cursor for a hyperlink */ 
@mixin choose-cursor($val){
  @if $val == 1 { cursor:crosshair; }
  @else if $val == 2 { cursor:wait; }
  @else if $val == 3 { cursor:pointer; }
  @else { cursor:help; } 
}

body {
  color: $white-color;
}

a {
  color: $white-color;
}

.nav {
  background: $orange-color;
}

.nav-list a:hover {
  background: $blue-color;
}

.welcome-section {
   /* 4. Adjust the stylesheet to use Sass nesting of styles and classes */
   p {
    font-size: 3rem;
    font-weight: 200;
    font-style: italic;
    color: $orange-color;
    }
}


.aboutme-section {
  background: $gray-color;
}

.projects-section {
  background: $blue-color;
}

.projects-section-header {
  border-bottom: $white-color;
}

.project {
  @include box-shadows(5px 5px 5px rgba(0, 0, 0, 0.5));  
  background: $gray-color;
  /* 6. Call the mixin with different values */
  @include choose-cursor(1);
}

.code {
  color: $gray-color;
}

.competition {
  background: $blue-color;
  /* 4. Adjust the stylesheet to use Sass nesting of styles and classes */
  h2 {
    margin-bottom: 50px;
  }
}

.btn-primary {
  background: $gray-color;
}

.btn-primary:hover {
  background: $orange-color;
  /* 6. Call the mixin with different values */
  @include choose-cursor(2);
}

.contact-section {
  background: $gray-color;
  /* 4. Adjust the stylesheet to use Sass nesting of styles and classes */
  p {
      font-family: $comic-font;
  }
}

.contact-details {
  /* 6. Call the mixin with different values */
  @include choose-cursor(3);
}

footer {
  background: $gray-color;
  border-top: 4px solid $orange-color;
}
